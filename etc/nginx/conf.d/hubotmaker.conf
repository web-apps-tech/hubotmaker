server {
    listen 80;
    server_name hubot.web-apps.tech;

    proxy_set_header    X-Real-IP       $remote_addr;
    proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header    Host            $http_host;
    proxy_redirect      off;
    proxy_max_temp_file_size    0;

    location / {
        if ($http_x_forwarded_proto != https) {
            return 301 https://$host$request_uri;
        }
    }
    location ^~ /.well-known/acme-challenge/ {
        root /usr/share/nginx/html/;
    }
}
server {
    listen 80;
    server_name api.hubot.web-apps.tech;

    location / {
        if ($http_x_forwarded_proto != https) {
            return 301 https://$host$request_uri;
        }
    }
    location ^~ /.well-known/acme-challenge/ {
        root /usr/share/nginx/html/;
    }
}
server {
    listen 443;
    server_name hubot.web-apps.tech;

    proxy_set_header    X-Real-IP       $remote_addr;
    proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header    Host            $http_host;
    proxy_redirect      off;
    proxy_max_temp_file_size    0;

    ssl on;
    ssl_certificate /etc/letsencrypt/live/hubot.web-apps.tech/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/hubot.web-apps.tech/privkey.pem;

    location / {
        include /etc/nginx/fastcgi_params;
        fastcgi_param SCRIPT_NAME haas.psgi;
        fastcgi_pass unix:/var/run/plack/haas-front.sock;
        root /var/www/haas-front;
    }
    location /static {
        root /var/www/haas-front;
    }
}
server {
    listen 443;
    server_name api.hubot.web-apps.tech;

    ssl on;
    ssl_certificate /etc/letsencrypt/live/hubot.web-apps.tech/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/hubot.web-apps.tech/privkey.pem;

    location / {
		add_header 	Access-Control-Allow-Origin *;
		add_header	Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
		add_header	Access-Control-Allow-Headers "Origin, Authorization, Accept";
		add_header	Access-Contron-Allow-Credentials true;
		include		uwsgi_params;
		uwsgi_pass	unix:/var/run/uwsgi/haasapi.sock;

		if ($request_method = OPTIONS) {
			add_header Access-Control-Allow-Origin *;
                	add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                	add_header Access-Control-Allow-Headers "Origin, Authorization, Accept";
                	add_header Access-Control-Allow-Credentials true;
                	add_header Content-Length 0;
                	add_header Content-Type text/plain;
                	return 200;
		}
	}
}
